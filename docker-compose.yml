version: "3.9"

networks:
  data:
    name: spark-stack
    driver: bridge
    attachable: true         # utile pour un shell ¬´ docker run -it --network spark-stack ‚Ä¶ ¬ª

volumes:
  zkdata: {}
  kafka-logs: {}
  pgdata: {}
  checkpoint: {}

services:
  zookeeper:
    image: bitnami/zookeeper:3.9
    container_name: zookeeper
    networks: [data]
    volumes:
      - zkdata:/bitnami/zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports: ["2181:2181"]

  kafka:
    build: ./Infra/kafka             # ‚Üê Dockerfile ci-dessus
    container_name: kafka
    depends_on: [zookeeper]
    networks: [data]
    volumes:
      - kafka-logs:/tmp/kafka-logs
    ports: ["9092:9092"]
    environment:                     # uniquement JVM / tuning
      KAFKA_HEAP_OPTS: "-Xmx1g"

  postgres:
    image: postgres:15
    container_name: postgres
    networks: [data]
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./Infra/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    environment:
      POSTGRES_DB:       openfood
      POSTGRES_USER:     ingest
      POSTGRES_PASSWORD: ingestpwd
    ports: ["5433:5432"]

  producer:
    build:
      context: .
      dockerfile: src/main/scala/com/esgi/Producer/Dockerfile
    container_name: producer
    depends_on: [kafka]
    networks: [data]
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092   # ‚Üê m√™me r√©seau
      USE_API:           "true"
      BATCH_LENGTH:      "100"
      MAX_OFFSET:        "3808300"
    volumes:
      - ./data:/app/data

  consumer:
    build:
      context: .
      dockerfile: src/main/scala/com/esgi/Consumer/Dockerfile
    container_name: consumer
    depends_on: [kafka, postgres]
    networks: [data]
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      CHECKPOINT_PATH:        /checkpoint/generic
      PG_URL:                 jdbc:postgresql://postgres:5432/openfood
      PG_USER:                ingest
      PG_PWD:                 ingestpwd
    volumes:
      - checkpoint:/checkpoint

  # üìä Streamlit Dashboard
  streamlit:
    build:
      context: ./streamlit       # ‚Üê correspond au dossier contenant le Dockerfile
      dockerfile: Dockerfile     # ‚Üê ce fichier est bien dans ./streamlit
    container_name: streamlit
    depends_on: [postgres]
    networks: [data]
    ports:
      - "8501:8501"


